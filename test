#!/usr/bin/env node
"use strict";

var Promise     = require('bluebird'),
    fs          = Promise.promisifyAll(require('fs')),
    nreplClient = require('nrepl-client'),
    os          = require('os'),
    path        = require('path');

var nreplPortFile = path.join(os.homedir(), '.clj-center-nrepl-port');

function readNreplPort(retry) {
    return fs.statAsync(nreplPortFile).then(function (stats) {
        if (stats.size == 0) throw new Error("nrepl port file size 0");
        return fs.readFileAsync(nreplPortFile, 'utf8');
    }).catch(function (err) {
        if (retry <= 0) throw err;
        console.log("nrepl port file not ready, retrying");
        return Promise.delay(1000).then(function () {
            return readNreplPort(retry - 1);
        });
    });
}

readNreplPort(10).then(function (port) {
    var conn = Promise.promisifyAll(nreplClient.connect({port: port}));
    return conn.onceAsync('connect').then(function () {
        return conn.evalAsync('(+ 1 1)');
    }).then(function (results) {
        if (!(results.length == 2 &&
              results[0].value === '2' &&
              results[1].status.length == 1 &&
              results[1].status[0] == 'done'))
            throw new Error(JSON.stringify(results, null, 2));
    }).finally(function () {
        conn.end();
    });
});
